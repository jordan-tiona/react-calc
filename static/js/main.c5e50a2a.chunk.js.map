{"version":3,"sources":["components/Button.jsx","components/Panel.jsx","components/Display.jsx","helper/calculate.js","components/App.jsx","index.js"],"names":["Button","handleClick","props","clickHandler","name","className","onClick","this","Component","Panel","state","Display","value","calculate","total","operand","operation","parseFloat","toString","length","substring","test","includes","operate","first","second","result","App","setState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c5e50a2a.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Button extends Component {\r\n\r\n    handleClick = () => {\r\n        this.props.clickHandler(this.props.name);\r\n    }\r\n\r\n    render() { \r\n        return (\r\n            <div className=\"button\">\r\n                <button onClick={this.handleClick}>{this.props.name}</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Button;","import React, { Component } from 'react';\r\nimport Button from './Button';\r\n\r\nclass Panel extends Component {\r\n    state = {  }\r\n\r\n    handleClick = (name) => {\r\n        this.props.clickHandler(name);\r\n    }\r\n\r\n    render() { \r\n        return (\r\n            <div>\r\n                <div className=\"panel-row\">\r\n                    <Button name=\"C\" clickHandler={this.handleClick} />\r\n                    <Button name=\"CE\" clickHandler={this.handleClick} />\r\n                    <Button name=\"+/-\" clickHandler={this.handleClick} />\r\n                    <Button name=\"Bk\" clickHandler={this.handleClick} />\r\n                </div>\r\n                <div className=\"panel-row\">\r\n                    <Button name=\"7\" clickHandler={this.handleClick} />\r\n                    <Button name=\"8\" clickHandler={this.handleClick} />\r\n                    <Button name=\"9\" clickHandler={this.handleClick} />\r\n                    <Button name=\"รท\" clickHandler={this.handleClick} />\r\n                </div>\r\n                <div className=\"panel-row\">\r\n                    <Button name=\"4\" clickHandler={this.handleClick} />\r\n                    <Button name=\"5\" clickHandler={this.handleClick} />\r\n                    <Button name=\"6\" clickHandler={this.handleClick} />\r\n                    <Button name=\"x\" clickHandler={this.handleClick} />\r\n                </div>\r\n                <div className=\"panel-row\">\r\n                    <Button name=\"1\" clickHandler={this.handleClick} />\r\n                    <Button name=\"2\" clickHandler={this.handleClick} />\r\n                    <Button name=\"3\" clickHandler={this.handleClick} />\r\n                    <Button name=\"-\" clickHandler={this.handleClick} />\r\n                </div>\r\n                <div className=\"panel-row\">\r\n                    <Button name=\"0\" clickHandler={this.handleClick} />\r\n                    <Button name=\".\" clickHandler={this.handleClick} />\r\n                    <Button name=\"=\" clickHandler={this.handleClick} />\r\n                    <Button name=\"+\" clickHandler={this.handleClick} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Panel;","import React, { Component } from 'react';\r\n\r\nclass Display extends Component {\r\n    state = {  }\r\n    render() { \r\n        return (\r\n            <div className=\"display\">\r\n                <div>{this.props.value}</div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Display;","export default function calculate(state, name) {\r\n    //Clicked (C)lear\r\n    if (name === 'C') {\r\n        return {\r\n            total: null,\r\n            operand: null,\r\n            operation: null\r\n        };\r\n    }\r\n\r\n    //Clicked (C)lear (E)ntry\r\n    if (name === 'CE') {\r\n        return {\r\n            operand: null\r\n        };\r\n    }\r\n\r\n    //Clicked +/-\r\n    if (name === '+/-') {\r\n        //If there's an operand, negate it\r\n        if (state.operand) {\r\n            return {\r\n                operand: (parseFloat(state.operand) * -1).toString()\r\n            };\r\n        }\r\n        else {\r\n            if (state.total && !state.operation) {\r\n                return {\r\n                    total: (parseFloat(state.total) * -1).toString()\r\n                };\r\n            }\r\n        }\r\n    }\r\n\r\n    //Clicked Bk (Backspace)\r\n    if (name === 'Bk') {\r\n        if (state.operand) {\r\n            //Only one digit, just change to 0\r\n            if (state.operand.length === 1) {\r\n                return {\r\n                    operand: '0'\r\n                };\r\n            }\r\n\r\n            //Delete last digit\r\n            return  {\r\n                operand: state.operand.substring(0, state.operand.length - 1)\r\n            };\r\n        }\r\n    }\r\n\r\n    //Any of the number keys\r\n    if (/[0-9]+/.test(name)) {\r\n        //If they clicked 0 and the operand is already zero, don't do anything\r\n        if (name === '0' && state.operand === '0') {\r\n            return {};\r\n        }\r\n\r\n        //If there's an operation being done, update the operand\r\n        if (state.operation) {\r\n            if (state.operand) {\r\n                return {\r\n                    operand: state.operand + name\r\n                };\r\n            }\r\n            else {\r\n                return {\r\n                    operand: name\r\n                };\r\n            }\r\n        }\r\n\r\n        //If no operation is being done, clear the total and update the operand\r\n        if (state.operand) {\r\n            let operand = '';\r\n            if (state.operand === '0') {\r\n                operand = name;\r\n            }\r\n            else {\r\n                operand = state.operand + name;\r\n            }\r\n\r\n            return {\r\n                total: null,\r\n                operand: operand\r\n            }\r\n        }\r\n        else {\r\n            return {\r\n                total: null,\r\n                operand: name\r\n            };\r\n        }\r\n    }\r\n\r\n    //Decimal point (.)\r\n    if (name === '.') {\r\n        if (state.operand) {\r\n            //If there's already a decimal then do nothing\r\n            if (state.operand.includes('.')) {\r\n                return {};\r\n            }\r\n            return {\r\n                operand: state.operand + '.'\r\n            };\r\n        }\r\n        return {\r\n            operand: '0.'\r\n        };\r\n    }\r\n\r\n    //Clicked (=)\r\n    if (name === '=') {\r\n        //As long as we have an operation and an operand\r\n        if (state.operation && state.operand) {\r\n            return {\r\n                total: operate(state.total, state.operand, state.operation),\r\n                operand: null,\r\n                operation: null\r\n            }\r\n        }\r\n        else {\r\n            return {};\r\n        }\r\n    }\r\n\r\n    //Everything else is an operation\r\n    if (state.operand) {\r\n        //If there's already an operation, perform that operation and queue up this one\r\n        if (state.operation) {\r\n            return {\r\n                total: operate(state.total, state.operand, state.operation),\r\n                operand: null,\r\n                operation: name\r\n            }\r\n        }\r\n        //Otherwise, just queue up the operation\r\n        else {\r\n            return {\r\n                total: state.operand,\r\n                operand: null,\r\n                operation: name\r\n            };\r\n        }\r\n    }\r\n\r\n    return {};\r\n}\r\n\r\nfunction operate(total, operand, operation) {\r\n    let first = total || '0';\r\n    let second = operand || '0';\r\n    let result = '';\r\n\r\n    //Don't divide by zero\r\n    if (second === '0' && operation === 'รท') {\r\n        second = '1';\r\n    }\r\n\r\n    //Convert to numbers\r\n    first = parseFloat(first);\r\n    second = parseFloat(second);\r\n\r\n    switch(operation) {\r\n        case '+':\r\n            result = (first + second).toString();\r\n            break;\r\n        case '-':\r\n            result = (first - second).toString();\r\n            break;\r\n        case 'รท':\r\n            result = (first / second).toString();\r\n            break;\r\n        case 'x':\r\n            result = (first * second).toString();\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    return result;\r\n}","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Panel from './Panel';\r\nimport Display from './Display';\r\nimport calculate from '../helper/calculate';\r\n\r\nclass App extends Component {\r\n    state = {\r\n        total: null,\r\n        operand: null,\r\n        operation: null\r\n    };\r\n\r\n    handleClick = (name) => {\r\n        this.setState(calculate(this.state, name));\r\n    }\r\n\r\n    render() { \r\n        return (\r\n            <div className=\"app\">\r\n                <Display value={this.state.operand || this.state.total || '0'}/>\r\n                <Panel clickHandler={this.handleClick}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}